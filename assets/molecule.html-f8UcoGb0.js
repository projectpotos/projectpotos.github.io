import{_ as i,r as l,o as r,c as s,a as e,b as t,d as n,e as a}from"./app-IOn6Q2F5.js";const c={},d=e("h1",{id:"molecule",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#molecule","aria-hidden":"true"},"#"),t(" Molecule")],-1),u=e("p",null,"All Ansible roles should be tested using Molecule. This also allows for testing in pipelines to verify a role still works as intended after a change.",-1),h={href:"https://molecule.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},p={href:"https://molecule.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="quick-introduction" tabindex="-1"><a class="header-anchor" href="#quick-introduction" aria-hidden="true">#</a> Quick introduction</h2><p>You probably want to add Molecule with Docker to your <code>requirements.txt</code> file.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># At least Ansible 2.12 is needed due to used features like &#39;argument_specs&#39;
ansible&gt;=2.12

# Required for testing
ansible-lint[yamllint]
molecule[docker, lint]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can then simply call <code>python3 -m pip install -r requirements.txt</code> to install Molecule and all its dependencies.</p><p>For the start create a <code>molecule/default</code> directory to create a default scenario.</p><p>In there define everything related to this scenario in the <code>molecule.yml</code> file. By default Ansible is used as provisioner, docker als driver and galaxy for dependency resolution.</p><p>Further we have the following Ansible playbooks in that directory:</p>`,7),_=e("li",null,[e("code",null,"prepare.yml"),t(", this playbook prepares the scenario in the Docker container")],-1),f={href:"https://en.wikipedia.org/wiki/Idempotence",target:"_blank",rel:"noopener noreferrer"},b=e("li",null,[e("code",null,"verify.yml"),t(", in this playbook you should check if the container is now in the state it should be in.")],-1);function v(y,k){const o=l("ExternalLinkIcon");return r(),s("div",null,[d,u,e("p",null,[t("Generally we recommend that you "),e("a",h,[t("read the docs of Molecule"),n(o)]),t(", as this quick introduction only gives an very brief insight. "),e("a",p,[t("Link"),n(o)])]),m,e("ul",null,[_,e("li",null,[t("`converge.yml, with this playbook the role you want to test should be applied to the Docker container. This playbook gets executed twice, the second time is to test for "),e("a",f,[t("idempotence"),n(o)]),t(".")]),b])])}const x=i(c,[["render",v],["__file","molecule.html.vue"]]);export{x as default};
